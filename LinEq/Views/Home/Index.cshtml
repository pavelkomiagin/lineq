<html>
<head>
    <title>@ViewBag.Title</title>
    <meta charset="UTF-8">
    <script src="@Url.Content("~/Scripts/jquery-1.8.2.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")"></script>
    <link rel="stylesheet" href="@Url.Content("~/Content/Site.css")" type="text/css">
</head>
<body>
    <div id="page">
        <div id="header">
            <h1>Linear System Solver</h1>
        </div>
        <div id="content" class="narrowcolumn">
            <textarea rows="10" cols="50" id="equationsText"></textarea><br />
            <button id="solveButton">Solve</button>
            <div id="solveBlock"></div>
        </div>
        <hr>
        <div id="footer" role="contentinfo">
            <p><a href="https://github.com/Aristokrat/lineq">Project on Github</a></p>
        </div>
    </div>
    <div id="content">
        
    </div>
    <script>
        function removeZeroCols(matrix, rows, cols) {
            var tmpMatrix = [];
            for (var k = 0; k < rows; k++) {
                tmpMatrix[k] = [];
            }

            var tmpMatrixColsCount = 0;
            for (var i = 0; i < cols; i++) {
                var isEmptyCol = true;
                for (var j = 0; j < rows; j++) {
                    if (matrix[j][i] != 0) {
                        isEmptyCol = false;
                        break;
                    }
                }
                if (!isEmptyCol) {
                    for (var l = 0; l < rows; l++) {
                        tmpMatrix[l][tmpMatrixColsCount] = matrix[l][i];
                    }
                    tmpMatrixColsCount++;
                }
            }
            return tmpMatrix;
        }

        $(document).ready(function () {
            $('#equationsText').val("9x1 + 4x4=7\n4*x2+4*x3=8\nx1+x3 = 3\nx1+x4 = 3");

            $('#solveButton').click(function () {
                var rawIncomingText = $('#equationsText').val();
                var rawEquations = rawIncomingText.split('\n');

                var matrix = [];
                var freeMembers = [];
                var cols = 0;
                var rows = rawEquations.length;
                for (var i = 0; i < rows; i++) {
                    matrix[i] = [];
                    
                    var rawEq = rawEquations[i];
                    var eqParts = rawEq.split('=');
                    var leftPart = eqParts[0];
                    var rightPart = parseFloat(eqParts[1]);

                    freeMembers[i] = rightPart;
                    leftPart = leftPart.replace(/-/gi, "+-");
                    var augends = leftPart.split(/\+/);

                    for (var j = 0; j < augends.length; j++) {
                        var augend = $.trim(augends[j]);
                        var augendParts = augend.split('x');
                        var number = (augendParts[0] !== '') ? parseFloat(augendParts[0]) : 1;
                        var index = augendParts[1];
                        
                        if (parseInt(index) > cols)
                            cols = parseInt(index);

                        matrix[i][index - 1] = number;
                    }
                }

                for (var i = 0; i < rows; i++) {
                    for (var j = 0; j < cols; j++) {
                        if (matrix[i][j] == undefined)
                            matrix[i][j] = 0;
                    }
                }

                matrix = removeZeroCols(matrix, rows, cols);

                for (var i = 0; i < rows; i++) {
                    matrix[i][matrix[i].length] = freeMembers[i];
                }

                var equations = [];
                for (var i = 0; i < matrix.length; i++) {
                    equations.push(matrix[i].join(","));
                }

                if (matrix.length != matrix[0].length - 1) {
                    $('#solveBlock').html("The number of equations must be equal to the number of variables");
                }
                else {
                    $('#solveBlock').html("Please, waiting...");
                    solveEquations(equations.join("|"));
                }
            });
        });

        function solveEquations(equations) {
            $.post('@Url.Action("Solve")', { "equations": equations }, function (data) {
                if (data.length == 0) {
                    $('#solveBlock').html("This system has no unique solution");
                }
                else {
                    $('#solveBlock').html("Solution: <br />");
                    for (var i = 1; i <= data.length; i++)
                        $('#solveBlock').append('x' + i + ' = ' + data[i - 1] + '<br />');
                }
            }, 'json');
        };
    </script>
</body>
</html>